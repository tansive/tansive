apiVersion: 0.1.0-alpha.1
kind: SkillSet
metadata:
  name: supabase-demo
  catalog: test-catalog
  variant: test-variant
  path: /demo-skillsets
spec:
  version: "0.1.0"
  sources:
    - name: supabase-mcp-server
      runner: system.mcp.stdio
      config:
        version: "0.1.0"
        command: npx
        args:
          - -y
          - "@supabase/mcp-server-supabase@latest"
          - "--project-ref={{ .ENV.SUPABASE_PROJECT }}"
        env:
          SUPABASE_ACCESS_TOKEN: {{ .ENV.SUPABASE_ACCESS_TOKEN }}
    - name: sql-validator
      runner: system.stdiorunner
      config:
        version: "0.1.0-alpha.1"
        runtime: "python"
        script: "validate_sql.py"
        security:
          type: default
  context:
    - name: sql-permissions
      schema:
        type: object
        properties:
          allow:
            type: object
            additionalProperties:
              type: array
              items:
                type: string
          deny:
            type: object
            additionalProperties:
              type: array
              items:
                type: string
        required:
          - allow
          - deny
      value:
        allow:
          select:
            - support_tickets
            - support_messages
          update:
            - support_messages
        deny:
          all:
            - integration_tokens
      annotations: {}
  skills:
    - name: validate_sql
      source: sql-validator
      description: Validate SQL input
      inputSchema:
        type: object
        required: []
      outputSchema:
        type: object
      exportedActions:
        - supabase.mcp.use
    - name: list_tables
      source: supabase-mcp-server
      description: List tables in the database
      inputSchema:
        type: object
        required: []
      outputSchema:
        type: object
      exportedActions:
        - supabase.tables.list
    - name: execute_sql
      source: supabase-mcp-server
      description: Execute SQL query
      inputSchema:
        type: object
        required: []
      outputSchema:
        type: object
      transform: |
        function(session, input) {
          let validationInput = {
            sql: input.query
          }
          let ret = SkillService.invokeSkill("validate_sql", validationInput);
          // if ret is not an object, throw an error
          if (typeof ret !== "object") {
            throw new Error("unable to validate input");
          }
          if(!ret.allowed) {
            throw new Error(ret.reason);
          }
          console.log("input validated");
          console.log(ret);
          return input;
        }
      exportedActions:
        - supabase.sql.query
    - name: supabase_mcp
      source: supabase-mcp-server
      description: Supabase MCP server
      inputSchema:
        type: object
        required: []
      outputSchema:
        type: object
      exportedActions:
        - supabase.mcp.use
      annotations:
        mcp:tools: overlay